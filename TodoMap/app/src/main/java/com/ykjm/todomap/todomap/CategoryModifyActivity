package com.ykjm.todomap.todomap

import android.content.Intent
import android.graphics.Color
import android.os.Bundle
import android.text.Editable

import android.widget.Toast
import androidx.appcompat.app.AlertDialog
import androidx.appcompat.app.AppCompatActivity
import com.ykjm.todomap.todomap.databinding.CategoryModifyBinding

class CategoryModifyActivity : AppCompatActivity() {

    private lateinit var binding: CategoryModifyBinding

    private val colors = arrayOf("빨강", "초록", "파랑", "노랑", "검정", "보라", "주황", "하얀색")
    private val colorValues = intArrayOf(
        0xFFFF0000.toInt(), // Red
        0xFF00FF00.toInt(), // Green
        0xFF0000FF.toInt(), // Blue
        0xFFFFFF00.toInt(), // Yellow
        0xFF000000.toInt(), // Black
        0xFF800080.toInt(), // Purple
        0xFFFFA500.toInt(), // Orange
        0xFFFFFFFF.toInt()  // White
    )

    private var selectedTextColor: Int = Color.BLACK // 기본 검정색
    private var selectedBackgroundColor: Int = Color.WHITE // 기본 흰색
    private var buttonId: Int = -1

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        binding = CategoryModifyBinding.inflate(layoutInflater)
        setContentView(binding.root)

        val categoryTitle = intent.getStringExtra("categoryTitle")
        val textColor = intent.getIntExtra("textColor", Color.BLACK)
        val backgroundColor = intent.getIntExtra("backgroundColor", Color.WHITE)
        val categoryListText = intent.getStringExtra("categoryListText") ?: ""

        binding.categoryList.text = Editable.Factory.getInstance().newEditable(categoryListText)

        buttonId = intent.getIntExtra("buttonId", -1)

        binding.modifyTitle.setTextColor(textColor)
        if (backgroundColor == Color.WHITE) {
            binding.modifyTitle.setBackgroundResource(R.drawable.white_background)
        } else {
            binding.modifyTitle.setBackgroundColor(backgroundColor)
        }
        binding.modifyTitle.setText(categoryTitle)

        binding.modifyTextColor.setOnClickListener {
            openColorPickerDialog(true)
        }

        binding.modifyChangeBackgroundColor.setOnClickListener {
            openColorPickerDialog(false)
        }

        binding.modifySave.setOnClickListener {
            if (binding.modifyTitle.text.toString().isEmpty()) {
                Toast.makeText(this, "아무것도 입력하지 않았습니다.", Toast.LENGTH_SHORT).show()
            } else {
                showSaveConfirmationDialog()
            }
        }

        binding.modifyCancel.setOnClickListener {
            navigateToCategoryActivity()
        }
    }

    private fun openColorPickerDialog(isTextColor: Boolean) {
        val builder = AlertDialog.Builder(this)
        builder.setTitle(if (isTextColor) "Choose Text Color" else "Choose Background Color")
        builder.setItems(colors) { dialog, which ->
            if (which in colors.indices) {
                val selectedColor = colorValues[which]
                if (isTextColor) {
                    selectedTextColor = selectedColor
                    binding.modifyTitle.setTextColor(selectedTextColor)
                } else {
                    selectedBackgroundColor = selectedColor
                    if (selectedBackgroundColor == Color.WHITE) {
                        binding.modifyTitle.setBackgroundResource(R.drawable.white_background)
                    } else {
                        binding.modifyTitle.setBackgroundColor(selectedBackgroundColor)
                    }
                }
            }
        }
        builder.show()
    }

    private fun showSaveConfirmationDialog() {
        val builder = AlertDialog.Builder(this)
        builder.setMessage("저장 하시겠습니까?")
            .setPositiveButton("확인") { dialog, id ->
                saveAndNavigate()
            }
            .setNegativeButton("취소") { dialog, id ->
                dialog.dismiss()
            }
        builder.create().show()
    }

    private fun saveAndNavigate() {
        val title = binding.modifyTitle.text.toString()

        val intent = Intent().apply {
            putExtra("categoryTitle", title)
            putExtra("textColor", selectedTextColor)
            putExtra("backgroundColor", selectedBackgroundColor)
            putExtra("buttonId", buttonId)
        }
        setResult(RESULT_OK, intent)
        finish()
    }

    private fun navigateToCategoryActivity() {
        finish()
    }

}
